import * as core from "@aws-cdk/core";
import * as cloudwatch from "@aws-cdk/aws-cloudwatch";
import * as sns from "@aws-cdk/aws-sns";
import * as sqs from "@aws-cdk/aws-sqs";
import * as subscriptions from "@aws-cdk/aws-sns-subscriptions";

export class HelloCdkStack extends core.Stack {
  constructor(scope: core.App, id: string, props?: core.StackProps) {
    super(scope, id, props);

    const queue = new sqs.Queue(this, "HelloCdkQueue", {
      visibilityTimeout: core.Duration.seconds(300)
    });

    const topic = new sns.Topic(this, "HelloCdkTopic", {
      topicName = "VisibleTopicName"
    }

    const sub = new subscriptions.SqsSubscription(queue, {});
    sub.bind(topic);
    
    const qMetric = queue.metric("ApproximateNumberOfMessagesVisible");

    new cloudwatch.Alarm(this, "Alarm", {
      metric: qMetric,
      threshold: 100,
      evaluationPeriods: 3,
      datapointsToAlarm: 2
    });
  }
}
